@startuml
'https://plantuml.com/class-diagram

BloodAnalysisSession *-- FrameInfo
BloodAnalysisActivity *-- BloodAnalysisSession

class BloodAnalysisActivity{
- mPreviewView : PreviewView
- Button : mStartButton : Button
- boolean : mAnalysisIsActive : boolean
- LineChart : mRedLineChart : LineChart
- TextView : mAnalysisParamText : TextView
- TextView : mInfoText : TextView
- {static} final int : CAMERA_PERMISSION_CODE : final int
- mCameraProviderFuture : ListenableFuture<ProcessCameraProvider>
- mInmageAnlysisHandler : Handler
- {static} UI_ENABLE_ANALYSIS_BUTTON : final int
- {static} UI_DISABLE_ANALYSIS_BUTTON : final int
- {static} UI_UPDATE_GRAPH : final int
- {static} UI_UPDATE_FPS_VALUE : final int
- {static} UI_UPDATE_FPS_VALUE_KEY : final String
- mBloodAnalysisSession : BloodAnalysisSession

# onCreate(savedInstanceState : Bundle) : void
# onDestroy() : void
+ checkPermission(String : permission, int requestCode) : void
+ bindPreviewAndAnalysis(@NonNull ProcessCameraProvider : cameraProvider) : void
+ saveAnalysisSession() : void
}


class BloodAnalysisSession{
- {static} DEFAULT_ANALYSIS_DURATION : final long
- ArrayList<FrameInfo> : mFramesInfo
+ BloodAnalysisSession() : void
+ getFramesInfo() : ArrayList<FrameInfo>
+ process(image : Image, lastTimestamp : long) : boolean
+ getDuration() : long
+ getHeartbeatAverage() : double
+ getHeartbeatLast() : double
+ getHeartbeatAt(Instant : Instant) : double
+ getPPGFiltered(index : int) : double
}

class FrameInfo{
- mTimestamp : long
- mFps : float
- mWidth : float
- mHeight : int
- mRedMean : int
- mGreenMean : int
- mBlueMean : int
- mThreshold : flaot
- mSumRedIntensity : int

+ getTimestamp() : long
+ getFps() : float
+ getSumRedIntensity() : int
+ getRedMean() : int
+ getBlueMean() : int
+ getGreenMean() : int
+ {static} clamp(val : double, min : double, max : double) : double
+ getMinMaxIntensity(bitImage : BitMap) : int[]
+ setThreshold(bitImage : BitMap) : void
+ getPPGValue() : float
+ computeSumIntensities(bitImage : BitMap) : void
+ fillInfo(image : Image, lastTimestamp : long) : boolean
+ convertYUVToBitmap(image : Image) : Bitmap
+ yuv420ToBitmap(image : Image) : Bitmap
}

@enduml